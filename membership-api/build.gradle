import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
import org.springframework.boot.gradle.tasks.bundling.BootJar

plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version '0.18.2'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

dependencies {
    implementation project(':membership-core')
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'

    swaggerUI 'org.webjars:swagger-ui:4.11.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}

openapi3 {
    setServer("http://localhost:8080")
    title = "restdocs-swagger API Documentation"
    description = "Spring REST Docs with SwaggerUI."
    version = "0.0.1"
    format = "yaml"
}

tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'
}

tasks.register('copySwaggerUI', Copy) {
    dependsOn 'resolveMainClassName'
    dependsOn 'generateSwaggerUISample'

    def generateSwaggerUISampleTask = tasks.named('generateSwaggerUISample', GenerateSwaggerUI).get()

    delete(file("src/main/resources/static/docs"))

    from("${generateSwaggerUISampleTask.outputDir}")
    into("src/main/resources/static/docs")
}

tasks.withType(BootJar) {
    dependsOn 'copySwaggerUI'
}